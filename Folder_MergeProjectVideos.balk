@echo off
setlocal enabledelayedexpansion

REM Prompt for user confirmation to prevent accidental execution
set /p "confirm=Press Y if you ran this file on purpose. (Y/N): "
if /i "%confirm%" neq "Y" goto :eof

REM Prompt the user to input the path to the folder containing global_props.json
set /p "input_folder=Enter the path to the folder containing global_props.json: "

REM Check if ffmpeg is installed and accessible in the system PATH
where ffmpeg >nul 2>&1
if %errorlevel% neq 0 (
    echo Error: ffmpeg is not installed or not in the system PATH.
    echo Please install ffmpeg and add it to your system PATH.
    pause
    exit /b 1
)

REM Check if global_props.json exists in the specified folder
set "json_file=%input_folder%\global_props.json"
if not exist "%json_file%" (
    echo Error: global_props.json does not exist in the specified folder.
    pause
    exit /b 1
)

REM Create a temporary file to store the list of videos
set "temp_file=%input_folder%\video_list.txt"

REM Use PowerShell to parse JSON, get the order array, and create the video list file
powershell -Command "$json = Get-Content '%json_file%' | ConvertFrom-Json; if (Test-Path '%input_folder%\global_props.mp4') { Add-Content '%temp_file%' \"file '%input_folder%\global_props.mp4'\" }; $json.order | ForEach-Object { Add-Content '%temp_file%' \"file '%input_folder%\$_'\" }"

if not exist "%temp_file%" (
    echo Error: Failed to create video list file.
    pause
    exit /b 1
)

echo Content of video_list.txt:
type "%temp_file%"


REM Extract the title from global_props.json using PowerShell
for /f "delims=" %%a in ('powershell -Command "$json = Get-Content '%json_file%' | ConvertFrom-Json; $json.title"') do set "title=%%a"

if not defined title (
    echo Error: Unable to extract title from global_props.json
    pause
    exit /b 1
)

REM Remove punctuation and replace spaces with underscores
set "title=!title: =_!"
for %%b in (^& ^< ^> ^^ ^| ' ^, ^. ^; ^: ^/) do set "title=!title:%%b=!"

echo Extracted title: !title!


REM Construct the ffmpeg command
set "output_file=%input_folder%\!title!.mp4"
set "ffmpeg_cmd=ffmpeg -y -f concat -safe 0 -i "%temp_file%" -c copy "%output_file%""


REM Display the ffmpeg command for confirmation
echo.
echo FFmpeg command to be executed:
echo !ffmpeg_cmd!
echo.

set /p "execute=Execute this command? (Y/N): "
if /i "!execute!" neq "Y" goto :eof

REM Execute the ffmpeg command to merge the videos
!ffmpeg_cmd!

REM Clean up the temporary file
del "%temp_file%"

REM Inform the user that the process is complete and show the output file location
echo.
echo Video merging complete. Output file: !output_file!
echo.
echo Press any key to close this window.
pause >nul

endlocal